# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  test_credentials:
    runs-on: ubuntu-latest
    container: 
      image: ghcr.io/kcwilkins/terraform-pipeline-ex/cicd:v1
      permissions:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}      

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          ls -laR
          pwd
          echo "Configure AWS Credentials"
          export AWS_CREDENTIALS=$AWS_CREDENTIALS_DEV
          export AWS_CONFIG=$AWS_CONFIG_DEV
          echo "AWS_CREDENTIALS $AWS_CREDENTIALS"
          echo "AWS_CONFIG $AWS_CONFIG"
          mkdir -p ~/.aws
          echo "$AWS_CREDENTIALS" | base64 -d > ~/.aws/credentials
          echo "$AWS_CONFIG" | base64 -d > ~/.aws/config
          chmod 600 ~/.aws/*
          echo "Configure SSH Keys"
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY_DEV" | base64 -d > /root/.ssh/id_rsa
          echo "$SSH_PUBLIC_KEY_DEV" | base64 -d > /root/.ssh/id_rsa.pub
          chmod 600 /root/.ssh/*
          chmod -R 755 /builds/kcwest/octain/infra/playbooks
          echo Log into container registry User $CI_REGISTRY_USER Pass $CI_REGISTRY_PASSWORD @ $CI_REGISTRY
          echo -n $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY


